pipeline {
    agent{
        label 'docker-slave-ssh'
    }
    tools {
        maven 'Maven3'
        jdk 'jdk8'
    }

    parameters{
        choice(
            choices: ['YES', 'NO'],
            description: 'VERIFY IF YOU WANT TO RELEASE?',
            name: 'isRelease'
        )
    }

    environment{
        USER_CREDENTIALS = credentials('JervinGit')
    }
    // env USER_CREDENTIALS create below variable
    // $USER_CREDENTIALS_USR = username
    // $USER_CREDENTIALS_PSW = password

    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Setting Git Config'){
            steps
            {
                sh 'git config user.email "jervinmandapat@gmail.com"'
                sh 'git config user.name "Jervin Mandapat"'
            }
        }

        stage ('Perform Maven Release') {
            when
            {
                expression { params.isRelease == 'YES' }
            }
            steps
            {
                echo 'Preparing and performing release..'
                withMaven(
                    maven: 'Maven3',
                    options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
                mavenLocalRepo: '${M2_HOME}/.repository')
                {
                    sh 'mvn --batch-mode release:clean release:prepare release:perform -Dusername=${USER_CREDENTIALS_USR} -Dpassword=${USER_CREDENTIALS_PSW}'
                }
            }
            post {
                success {
                    echo 'Archiving artifacts..'
                    sh 'mkdir -p mavenRelease && cp ./target/checkout/jenkins/target/*.jar ./mavenRelease';
                    archiveArtifacts artifacts: 'mavenRelease/*.*', fingerprint: true
                }
            }
        }
    }
}
