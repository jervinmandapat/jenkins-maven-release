pipeline {
    agent{
        label 'docker-slave-ssh'
    }
    tools {
        maven 'Maven3'
        jdk 'jdk8'
    }

    environment{
        USER_CREDENTIALS = credentials('JervinGit')
    }

    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "USER_CREDENTIALS_USR = $USER_CREDENTIALS_USR"
                    echo "USER_CREDENTIALS_USR = $USER_CREDENTIALS_PSW"
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Setting Git Config'){
            steps
            {
                sh 'git config user.email "jervinmandapat@gmail.com"'
                sh 'git config user.name "jervinmandapat"'
            }
        }

        stage ('Perform Maven Release') {
            steps
            {
                echo 'Preparing releasing..'

                // git branch: 'master',
                //     credentialsId: 'JervinGit',
                //     url: 'https://github.com/jervinmandapat/jenkins-maven-release.git'

                // withMaven(
                //     maven: 'Maven3',
                //     options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
                // mavenLocalRepo: '${M2_HOME}/.repository')
                // {
                //     sh "mvn --batch-mode release:clean release:prepare release:perform"
                // }
            }
            // post {
            //     success {
            //         echo 'Performing Release..'
            //         withMaven(maven: 'Maven3',options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
            //         mavenLocalRepo: '${M2_HOME}/.repository')
            //         {
            //             sh "mvn -B release:perform"
            //         }

            //         sh 'mkdir -p sample-jenkins-release && cp ./target/checkout/jenkins/target/*.ear ./sample-jenkins-release';
            //         archiveArtifacts artifacts: 'sample-jenkins-release/*.*', fingerprint: true
            //     }
            //     failure {
            //         echo 'Release rollback..'
            //         withMaven(maven: 'Maven3',options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
            //         mavenLocalRepo: '${M2_HOME}/.repository')
            //         {
            //             sh "mvn -B release:rollback"
            //         }
            //     }
            // }
        }
    }
}
