pipeline 
{
    agent
    {
        label 'docker-slave-ssh'
    }

    tools 
    {
        maven 'Maven3'
        jdk 'jdk8'
    }

    parameters
    {
        // Just simple choice to verify and to avoid accidentally 
        // building this job in jenkins (if not actually needed)
        choice(
            choices: ['YES', 'NO'],
            description: 'PLEASE VERIFY RELEASE!!! Are you sure you need a release?',
            name: 'MAKE_A_RELEASE'
        )
    }

    environment
    {
        // USER_CREDENTIALS create below variables, appending _USR & _PSW
        // $USER_CREDENTIALS_USR = username from credentials
        // $USER_CREDENTIALS_PSW = password from credentials
        USER_CREDENTIALS = credentials('JervinGit')
    }

    stages 
    {
        stage ('Initialize') 
        {
            steps 
            {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Git Config')
        {
            steps
            {
                sh 'git config user.email "jervinmandapat@gmail.com"'
                sh 'git config user.name "Jervin Mandapat"'
            }
        }

        stage ('Clean Tag')
        {
            steps
            {
                sh '''
                    git tag -l | xargs git tag -d
                    git fetch --tags
                '''
            }
        }

        stage ('Perform Maven Release') 
        {
            when
            {
                expression { params.MAKE_A_RELEASE == 'YES' }
            }
            steps
            {
                echo 'Preparing and performing release..'
                withMaven(
                    maven: 'Maven3',
                    options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)],
                    mavenLocalRepo: '${M2_HOME}/.repository'
                )
                {
                    sh 'mvn --batch-mode release:clean      \
                        release:prepare release:perform     \
                        -Dusername=${USER_CREDENTIALS_USR}  \
                        -Dpassword=${USER_CREDENTIALS_PSW}  \
                        -Dresume=false'
                }
            }
            post 
            {
                success 
                {
                    echo 'Archiving artifacts..'
                    sh 'mkdir -p mavenRelease && cp ./target/checkout/jenkins/target/*.jar ./mavenRelease';
                    archiveArtifacts artifacts: 'mavenRelease/*.*', fingerprint: true
                }
            }
        }
    }
}
