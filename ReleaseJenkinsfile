pipeline {
    agent{
        label 'docker-slave-ssh'
    }
    tools {
        maven 'Maven3'
        jdk 'jdk8'
    }

    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Setting Git Config'){
            steps
            {
                sh 'git config user.email "jervinmandapat@gmail.com"'
                sh 'git config user.name "Jervin Mandapat"'
            }
        }

        stage ('Perform Maven Release') {
            steps
            {
                echo 'Preparing releasing..'
                withMaven(
                    maven: 'Maven3',
                    options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
                mavenLocalRepo: '${M2_HOME}/.repository')
                {
                    sh "mvn clean"
                    sh "mvn -B release:prepare"
                }
            }
            post {
                success {
                    echo 'Performing Release..'
                    withMaven(maven: 'Maven3',options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
                    mavenLocalRepo: '${M2_HOME}/.repository')
                    {
                        sh "mvn -B release:perform"
                    }

                    sh 'mkdir -p sample-jenkins-release && cp ./target/checkout/jenkins/target/*.ear ./sample-jenkins-release';
                    archiveArtifacts artifacts: 'sample-jenkins-release/*.*', fingerprint: true
                }
                failure {
                    echo 'Release rollback..'
                    withMaven(maven: 'Maven3',options: [artifactsPublisher(disabled: true),junitPublisher(disabled: true)],
                    mavenLocalRepo: '${M2_HOME}/.repository')
                    {
                        sh "mvn -B release:rollback"
                    }
                }
            }
        }
    }
}
